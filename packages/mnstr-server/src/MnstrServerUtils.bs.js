// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Express = require("bs-express/src/Express.js");
var Js_option = require("bs-platform/lib/js/js_option.js");

function errorToJson(exn) {
  var str = JSON.stringify(exn);
  if (str !== undefined) {
    return JSON.parse(str);
  } else {
    return null;
  }
}

function heartbeat(_, res) {
  Express.Response[/* sendString */2]("ok", res);
  return Promise.resolve(undefined);
}

function handleErrors(isDev) {
  return Express.Middleware[/* fromError */4]((function (_, err, _$1, res) {
                var error = errorToJson(err);
                var json = { };
                json["success"] = false;
                if (isDev) {
                  json["error"] = error;
                }
                return Express.Response[/* sendJson */3](json, Express.Response[/* status */9](/* InternalServerError */47)(res));
              }));
}

var Http = /* module */[
  /* errorToJson */errorToJson,
  /* heartbeat */heartbeat,
  /* handleErrors */handleErrors
];

function primaryUuid(knex, table, column) {
  var colName = Js_option.getWithDefault("id", (column == null) ? /* None */0 : [column]);
  return table.uuid(colName).primary().defaultTo(knex.raw("uuid_generate_v4()")).comment("The uuid primary key.");
}

function foreignUuid(table, column, reference, required) {
  var col = table.uuid(column);
  if (required) {
    col.notNullable();
  }
  table.foreign(column).references(reference.column).inTable(reference.table);
  return col;
}

var Database = /* module */[
  /* primaryUuid */primaryUuid,
  /* foreignUuid */foreignUuid
];

exports.Http = Http;
exports.Database = Database;
/* Express Not a pure module */
